{"version":3,"sources":["index.js"],"names":["xhReq","XMLHttpRequest","open","send","status","alert","jsonData","JSON","parse","responseText","getRandomInt","min","max","Math","floor","random","TextContents","props","handleClick","bind","state","dataLen","data","quotes","length","index","color","colorData","this","setState","id","style","backgroundColor","className","quote","author","href","title","target","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8OAOIA,EAAQ,IAAIC,eAChBD,EAAME,KAAK,MAFG,0IAEa,GAC3BF,EAAMG,KAAK,MACS,MAAjBH,EAAMI,QAAgBC,MAAM,2BAC/B,IAAIC,EAAWC,KAAKC,MAAMR,EAAMS,cAG5BC,EAAe,SAASC,EAAKC,GAC7B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,IAK9CK,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,CAACC,QAAQ,EAAKJ,MAAMK,KAAKC,OAAOC,OAC/BC,MAAOf,EAAa,EAAE,EAAKO,MAAMK,KAAKC,OAAOC,QAC7CE,MAAM,EAAKT,MAAMU,UAAUjB,EAAa,EAAE,EAAKO,MAAMU,UAAUH,UAL5D,E,+CAOnB,WACEI,KAAKC,SAAS,CAACJ,MAAOf,EAAa,EAAEkB,KAAKR,MAAMC,SAASK,MAAME,KAAKX,MAAMU,UAAUjB,EAAa,EAAEkB,KAAKX,MAAMU,UAAUH,a,oBAG1H,WACE,OACE,qBAAKM,GAAI,YAAYC,MAAS,CAACC,gBAAgBJ,KAAKR,MAAMM,OAA1D,SACA,sBAAKI,GAAG,gBAAR,UACA,sBAAKA,GAAG,YAAR,UACE,sBAAKA,GAAG,OAAOC,MAAO,CAACL,MAAME,KAAKR,MAAMM,OAAxC,UAAgD,uBAAMI,GAAG,aAAT,UAAsB,mBAAGG,UAAU,qBAAnC,OAAmEL,KAAKX,MAAMK,KAAKC,OAAOK,KAAKR,MAAMK,OAAOS,SAC5J,sBAAKJ,GAAG,SAASC,MAAO,CAACL,MAAME,KAAKR,MAAMM,OAA1C,eAAqDE,KAAKX,MAAMK,KAAKC,OAAOK,KAAKR,MAAMK,OAAOU,UAC9F,sBAAKL,GAAG,QAAR,UACJ,sBAAKA,GAAG,eAAeC,MAAO,CAACL,MAAME,KAAKR,MAAMM,OAAhD,UAAwD,mBAAGI,GAAG,cAAcM,KAAK,2BAA2BC,MAAM,oBAAoBC,OAAO,SAArF,SAA8F,mBAAGL,UAAU,4BAAgC,uCAAgB,mBAAGA,UAAU,4BAChO,qBAAKH,GAAG,mBAAR,SAA2B,wBAAQA,GAAG,YAAYS,QAASX,KAAKV,YAAaa,MAAO,CAACC,gBAAgBJ,KAAKR,MAAMM,OAArF,+BAGvB,mBAAGI,GAAG,OAAN,6B,GAxBmBU,IAAMC,WA+BjCC,IAASC,OACP,cAAC3B,EAAD,CAAcM,KAAMhB,EAAUqB,UAlChB,CAAC,YAAY,SAAS,OAAO,OAAO,SAAS,UAAU,gBAAgB,cAAc,YAAY,YAAY,UAAU,YAAY,OAAO,oBAmCxJiB,SAASC,eAAe,W","file":"static/js/main.565e1d49.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// import '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nvar dataUrl = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\nvar xhReq = new XMLHttpRequest();\nxhReq.open(\"GET\", dataUrl, false);\nxhReq.send(null);\nif(xhReq.status !== 200) alert('Error when reading data');\nvar jsonData = JSON.parse(xhReq.responseText);\n\n\nvar getRandomInt = function(min, max) {\n    return Math.floor(Math.random() * (max - min) + min);\n}\n\nvar colorList = ['IndianRed','Salmon','Pink','Gold','Orange','Thistle','RebeccaPurple','ForestGreen','OliveDrab','SteelBlue','SkyBlue','RoyalBlue','Peru','LightSlateGray'];\n\nclass TextContents extends React.Component{\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.state = {dataLen:this.props.data.quotes.length,\n                  index: getRandomInt(0,this.props.data.quotes.length),  \n                  color:this.props.colorData[getRandomInt(0,this.props.colorData.length)]};\n  }\n  handleClick() {\n    this.setState({index: getRandomInt(0,this.state.dataLen),color:this.props.colorData[getRandomInt(0,this.props.colorData.length)]});\n  }\n  \n  render() {\n    return(      \n      <div id =\"wholePage\" style = {{backgroundColor:this.state.color}}>\n      <div id=\"quote-section\">\n      <div id=\"quote-box\">\n        <div id=\"text\" style={{color:this.state.color}}><span id=\"quote-mark\"><i className=\"fa fa-quote-left\"></i> </span>{this.props.data.quotes[this.state.index].quote}</div>\n        <div id=\"author\" style={{color:this.state.color}}>- {this.props.data.quotes[this.state.index].author}</div>\n        <div id=\"icons\">\n    <div id=\"social-icons\" style={{color:this.state.color}}><a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" title=\"Tweet this quote!\" target=\"_blank\"><i className=\"fab fa-twitter-square\"></i></a><span>   </span><i className=\"fab fa-tumblr-square\"></i></div>\n    <div id=\"new-quote-button\"><button id=\"new-quote\" onClick={this.handleClick} style={{backgroundColor:this.state.color}}>new quote</button></div>\n  </div>   \n      </div>\n        <p id=\"sign\">by zzx</p>\n        </div>\n        </div>\n    );   \n  }\n}\n\nReactDOM.render(\n  <TextContents data={jsonData} colorData={colorList}/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}